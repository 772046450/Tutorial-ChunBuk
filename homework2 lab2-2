#include <stdio.h>
int main()
{
int i;              // 정형화된 변수 i를 선언합니다.
int *ptr;           // 고정형 변수를 가리키는 포인터 변수 ptr을 선언합니다
int **dptr;         // 포인터 변수를 가리키는 포인터 변수 dptr을 선언합니다
i = 1234;           // 초기화 변수 i의 값은 1234입니다
printf("[checking values before ptr = &i] \n");
printf("value of i == %d\n", i);
printf("address of i == %p\n", &i);
printf("value of ptr == %p\n", ptr);
printf("address of ptr == %p\n", &ptr);
ptr = &i; /* ptr is now holding the address of i */
printf("\n[checking values after ptr = &i] \n");
printf("value of i == %d\n", i);
printf("address of i == %p\n", &i);
printf("value of ptr == %p\n", ptr);
printf("address of ptr == %p\n", &ptr);
printf("value of *ptr == %d\n", *ptr);
dptr = &ptr; /* dptr is now holding the address of ptr */
printf("\n[checking values after dptr = &ptr] \n");
printf("value of i == %d\n", i);
printf("address of i == %p\n", &i);
printf("value of ptr == %p\n", ptr);
printf("address of ptr == %p\n", &ptr);
printf("value of *ptr == %d\n", *ptr);
printf("value of dptr == %p\n", dptr);
printf("address of dptr == %p\n", &dptr);
printf("value of *dptr == %p\n", *dptr);
printf("value of **dptr == %d\n", **dptr);
*ptr = 7777; /* changing the value of *ptr */
printf("\n[after *ptr = 7777] \n");
printf("value of i == %d\n", i);
printf("value of *ptr == %d\n", *ptr);
printf("value of **dptr == %d\n", **dptr);
**dptr = 8888; /* changing the value of **dptr */
printf("\n[after **dptr = 8888] \n");
printf("value of i == %d\n", i);
printf("value of *ptr == %d\n", *ptr);
printf("value of **dptr == %d\n", **dptr);
printf("2020039090 MAGUOHAO");
return 0;
}
//포인터와 이중 포인터의 사용을 보여주는 코드 예시입니다.이 프로그램에서 포인터는 변수 i의 주소를 저장하는 데 사용되며 이중 포인터는 포인터 ptr의 주소를 저장하는 데 사용됩니다.

